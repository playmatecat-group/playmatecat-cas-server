<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<!-- - This is the Cocoon web-app configurations file - - $Id$ -->
<!-- <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> -->
<web-app>

	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>test</param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 相关配置文件文件路径，可逗号隔开 -->
		<param-value>
			classpath*:config/spring/application*.xml
		</param-value>
	</context-param>
	
	<context-param>
        <param-name>log4jConfiguration</param-name>
        <!-- 相关配置文件文件路径，可逗号隔开 -->
        <param-value>
            log4j2.xml
        </param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    
    <!-- 解决自己(不是spring自管理的)启动的线程的内省get&set内存泄露问题,一定要配置在第一个listener,解决包括quartz插件泄露内存问题 -->
    <listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
    <!-- log4j2 listener-begin -->
    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener
        </listener-class>
    </listener>
    
        
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!-- log4j2 filter-begin -->
    <filter>
        <filter-name>log4jServletFilter</filter-name>
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>log4jServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>ASYNC</dispatcher>
    </filter-mapping>

	<!-- 配置字符编码过滤器，编码格式设为UTF-8，避免中文乱码 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 让form表单支持restful的put和delete方法
	在form提交参数中增加<input type="hidden" name="_method" value="put" /> 即可实现,注意form的method依然是post-->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>springMVC-dispatcher</servlet-name>
	</filter-mapping>
	
	<!-- 让spring可以接受form的put delete中的参数,若无次过滤器,则put delete表单内的参数无效 -->
	<filter>
        <filter-name>HttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


	<!-- spring MVC实现，采用servlet进行派发请求 -->
	<servlet>
		<servlet-name>springMVC-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- spring mvc启动配置文件 -->
			<param-value>classpath*:config/spring/dispatcher-mvc-servlet.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMVC-dispatcher</servlet-name>
		<!-- 拦截所有请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
<!-- 	
	<login-config>

             Authorization setting for SSL

        <auth-method>CLIENT-CERT</auth-method>

        <realm-name>Client Cert Users-only Area</realm-name>

    </login-config>

    <security-constraint>

             Authorization setting for SSL

        <web-resource-collection >

            <web-resource-name >SSL</web-resource-name>

            <url-pattern>/*</url-pattern>

        </web-resource-collection>

        <user-data-constraint>

            <transport-guarantee>CONFIDENTIAL</transport-guarantee>

        </user-data-constraint>

</security-constraint>
你会发现，即使使用 http://....:8080 来访问你的应用程序，它也会重定向为
 https://....8443 访问，也就是说，你的应用已经强制使用SSL安全访问层 -->
 



</web-app>
